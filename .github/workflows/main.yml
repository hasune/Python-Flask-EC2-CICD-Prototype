# Actions 작업명
name: Upload Python Package

# 이벤트 바인딩 : master 브랜치에 push 이벤트 발생 시 실행
on:
  push:
    branches: [ main ]

# 이벤트가 발생시 해당 작업들 실행
jobs:
  # 작업 분류 : 배포 (빌드와 배포를 분류 가능)
  deploy:
    # 작업 명
    name: test and deploy flask app to S3 bucket
    # 운영체제 설정 : 우분트 -> 빌드나 테스트, 압축등을 실행할 os 선택
    runs-on: ubuntu-latest

    # 위 작업의 세부 단계 설정
    steps:
      # 사용할 actions의  가상머신
      - uses: actions/checkout@v2

      # 스탭 명
      - name: Set up Python
        # python 가상머신 사용 - 부정확함
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      # 폴더 만드는 스탭
      - name: make artifacts dir
        run: mkdir ./artifacts/

      # 소스 파일 압축
      - name: zip artifacts
        #        run: zip -r ./artifacts/build.zip ./app/* appspec.yml
        run: zip -r ./artifacts/build.zip ./

      # AWS S3에 압축파일을 전달하는 설정 및 명령어
      - name: deploy to s3
        uses: jakejarvis/s3-sync-action@master

        with:
          args: --acl public-read --follow-symlinks --delete
        env:
          AWS_S3_BUCKET: ${{secrets.AWS_PRODUCTION_BUCKET_NAME}}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_IAM_MANAGER_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_IAM_MANAGER_SECRET_ACCESS_KEY }}
          AWS_REGION: ap-northeast-1
          # 깃허브에서 보낼 디렉토리
          SOURCE_DIR: './artifacts'
          # AWS S3의 목적지 디렉토리 S3에 존재해야함
          DEST_DIR: 'backend/'
